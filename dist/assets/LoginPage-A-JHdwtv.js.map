{"version":3,"file":"LoginPage-A-JHdwtv.js","sources":["../../src/pages/LoginPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { supabase } from '../lib/supabase';\nimport './AuthPages.css';\n\nconst LoginPage = () => {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [showResetForm, setShowResetForm] = useState(false);\n  const [resetEmail, setResetEmail] = useState('');\n  const [resetSent, setResetSent] = useState(false);\n  const [resetError, setResetError] = useState('');\n  const { signIn } = useAuth();\n  const navigate = useNavigate();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    // Limpiar error cuando el usuario comienza a escribir\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n\n    if (!formData.email) {\n      newErrors.email = 'email requerido';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      newErrors.email = 'email invalido';\n    }\n\n    if (!formData.password) {\n      newErrors.password = 'Contraseña requerida';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!validateForm()) return;\n\n    setLoading(true);\n    setErrors({});\n\n    try {\n      const { data, error } = await signIn(formData.email, formData.password);\n      \n      if (error) {\n        if (error.message.includes('Credencial de inicio de sesión no válidas')) {\n          setErrors({ general: 'Correo electrónico o contraseña no válidos' });\n        } else if (error.message.includes('Correo electrónico no confirmado')) {\n          setErrors({ general: 'Por favor revise su correo electrónico y confirme su cuenta antes de iniciar sesión.' });\n        } else {\n          setErrors({ general: error.message });\n        }\n        return;\n      }\n\n      // Verificar si el usuario ha completado la configuración emocional\n      navigate('/emotional-setup');\n    } catch (error) {\n      setErrors({ general: 'Se produjo un error inesperado. Inténtalo de nuevo.' });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleResetPassword = async (e) => {\n    e.preventDefault();\n    \n    if (!resetEmail) {\n      setResetError('Por favor ingrese su correo electrónico');\n      return;\n    }\n    \n    if (!/\\S+@\\S+\\.\\S+/.test(resetEmail)) {\n      setResetError('Por favor ingrese un correo electrónico válido');\n      return;\n    }\n    \n    setResetError('');\n    setLoading(true);\n    \n    try {\n      // Primero intentamos enviar el correo con la URL de redirección\n      const { error } = await supabase.auth.resetPasswordForEmail(resetEmail, {\n        redirectTo: `${window.location.origin}/reset-password`,\n      });\n      \n      if (error) throw error;\n      \n      setResetSent(true);\n    } catch (error) {\n      console.error('Error al enviar el correo de recuperación:', error);\n      setResetError(error.message || 'Ocurrió un error al enviar el correo de recuperación. Por favor, inténtalo de nuevo.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  const handleBackToLogin = () => {\n    setShowResetForm(false);\n    setResetEmail('');\n    setResetError('');\n    setResetSent(false);\n  };\n\n  return (\n    <div className=\"auth-page\">\n      <div className=\"auth-container\">\n        {!showResetForm ? (\n          <>\n            <div className=\"auth-header\">\n              <Link to=\"/\" className=\"back-link\">\n                ← Volver a la página de inicio\n              </Link>\n              <h1 className=\"auth-title\">Bienvenido de nuevo</h1>\n              <p className=\"auth-subtitle\">Inicie sesión en su cuenta de Cozy Hours</p>\n            </div>\n\n            <form className=\"auth-form\" onSubmit={handleSubmit}>\n              {errors.general && (\n                <div className=\"error-message\">\n                  {errors.general}\n                </div>\n              )}\n\n              <div className=\"form-group\">\n                <label htmlFor=\"email\" className=\"form-label\">Email</label>\n                <input\n                  type=\"email\"\n                  id=\"email\"\n                  name=\"email\"\n                  value={formData.email}\n                  onChange={handleChange}\n                  className={`form-input ${errors.email ? 'error' : ''}`}\n                  placeholder=\"Escribe tu email\"\n                  disabled={loading}\n                />\n                {errors.email && <span className=\"field-error\">{errors.email}</span>}\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"password\" className=\"form-label\">Contraseña</label>\n                <input\n                  type=\"password\"\n                  id=\"password\"\n                  name=\"password\"\n                  value={formData.password}\n                  onChange={handleChange}\n                  className={`form-input ${errors.password ? 'error' : ''}`}\n                  placeholder=\"Escribe tu contraseña\"\n                  disabled={loading}\n                />\n                {errors.password && <span className=\"field-error\">{errors.password}</span>}\n              </div>\n\n              <div className=\"form-group text-right\">\n                <button \n                  type=\"button\" \n                  className=\"forgot-password-link\"\n                  onClick={() => setShowResetForm(true)}\n                  disabled={loading}\n                >\n                  ¿Olvidaste tu contraseña?\n                </button>\n              </div>\n\n              <button \n                type=\"submit\" \n                className=\"btn btn-primary btn-full\"\n                disabled={loading}\n              >\n                {loading ? (\n                  <>\n                    <span className=\"loading-spinner\"></span>\n                    Iniciar sesión...\n                  </>\n                ) : (\n                  'Iniciar sesión'\n                )}\n              </button>\n            </form>\n\n            <div className=\"auth-footer\">\n              <p>\n                ¿No tienes una cuenta?{' '}\n                <Link to=\"/register\" className=\"auth-link\">\n                  Regístrate aquí\n                </Link>\n              </p>\n            </div>\n          </>\n        ) : (\n          <>\n            <div className=\"auth-header\">\n              <button \n                type=\"button\" \n                className=\"back-link\"\n                onClick={handleBackToLogin}\n              >\n                ← Volver al inicio de sesión\n              </button>\n              <h1 className=\"auth-title\">Recuperar contraseña</h1>\n              <p className=\"auth-subtitle\">\n                {resetSent \n                  ? 'Revisa tu correo electrónico para restablecer tu contraseña.'\n                  : 'Ingresa tu correo electrónico y te enviaremos un enlace para restablecer tu contraseña.'}\n              </p>\n            </div>\n\n            {!resetSent ? (\n              <form className=\"auth-form\" onSubmit={handleResetPassword}>\n                {resetError && (\n                  <div className=\"error-message\">\n                    {resetError}\n                  </div>\n                )}\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"reset-email\" className=\"form-label\">Correo electrónico</label>\n                  <input\n                    type=\"email\"\n                    id=\"reset-email\"\n                    value={resetEmail}\n                    onChange={(e) => setResetEmail(e.target.value)}\n                    className=\"form-input\"\n                    placeholder=\"tucorreo@ejemplo.com\"\n                    disabled={loading}\n                    required\n                  />\n                </div>\n\n                <button \n                  type=\"submit\" \n                  className=\"btn btn-primary btn-full\"\n                  disabled={loading}\n                >\n                  {loading ? (\n                    <>\n                      <span className=\"loading-spinner\"></span>\n                      Enviando...\n                    </>\n                  ) : (\n                    'Enviar enlace de recuperación'\n                  )}\n                </button>\n              </form>\n            ) : (\n              <div className=\"text-center\">\n                <div className=\"success-message\">\n                  <p>Hemos enviado un correo a <strong>{resetEmail}</strong> con instrucciones para restablecer tu contraseña.</p>\n                  <p>Si no ves el correo, revisa tu carpeta de spam.</p>\n                </div>\n                <button \n                  className=\"btn btn-secondary mt-4\"\n                  onClick={handleBackToLogin}\n                >\n                  Volver al inicio de sesión\n                </button>\n              </div>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"names":["LoginPage","formData","setFormData","useState","email","password","errors","setErrors","loading","setLoading","showResetForm","setShowResetForm","resetEmail","setResetEmail","resetSent","setResetSent","resetError","setResetError","signIn","useAuth","navigate","useNavigate","handleChange","e","name","value","target","prev","validateForm","newErrors","test","Object","keys","length","handleSubmit","preventDefault","data","error","message","includes","general","handleResetPassword","supabase","auth","resetPasswordForEmail","redirectTo","window","location","origin","handleBackToLogin","jsx","jsxs","Fragment","Link"],"mappings":"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"}