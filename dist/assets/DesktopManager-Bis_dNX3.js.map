{"version":3,"file":"DesktopManager-Bis_dNX3.js","sources":["../../src/components/AccountSettings.jsx","../../src/components/AppHeader.jsx","../../src/components/DesktopManager.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport { supabase } from '../lib/supabase';\nimport './AccountSettings.css';\n\nconst AccountSettings = ({ isOpen, onClose }) => {\n  const { user, signOut } = useAuth();\n  const [activeTab, setActiveTab] = useState('profile');\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState({ type: '', text: '' });\n  const fileInputRef = useRef(null);\n\n  // Estado del formulario de perfil\n  const [profileData, setProfileData] = useState({\n    fullName: user?.user_metadata?.full_name || '',\n    email: user?.email || '',\n    avatarUrl: user?.user_metadata?.avatar_url || ''\n  });\n\n  // Estado del formulario de contrase√±a\n  const [passwordData, setPasswordData] = useState({\n    currentPassword: '',\n    newPassword: '',\n    confirmPassword: ''\n  });\n\n  const handleProfileUpdate = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setMessage({ type: '', text: '' });\n\n    try {\n      const { error } = await supabase.auth.updateUser({\n        data: {\n          full_name: profileData.fullName,\n          avatar_url: profileData.avatarUrl\n        }\n      });\n\n      if (error) throw error;\n\n      setMessage({ type: 'success', text: '¬°Perfil actualizado exitosamente!' });\n    } catch (error) {\n      setMessage({ type: 'error', text: error.message });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handlePasswordUpdate = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setMessage({ type: '', text: '' });\n\n    if (passwordData.newPassword !== passwordData.confirmPassword) {\n      setMessage({ type: 'error', text: 'Las contrase√±as no coinciden' });\n      setLoading(false);\n      return;\n    }\n\n    if (passwordData.newPassword.length < 6) {\n      setMessage({ type: 'error', text: 'La contrase√±a debe tener al menos 6 caracteres' });\n      setLoading(false);\n      return;\n    }\n\n    try {\n      const { error } = await supabase.auth.updateUser({\n        password: passwordData.newPassword\n      });\n\n      if (error) throw error;\n\n      setMessage({ type: 'success', text: '¬°Contrase√±a actualizada exitosamente!' });\n      setPasswordData({ currentPassword: '', newPassword: '', confirmPassword: '' });\n    } catch (error) {\n      setMessage({ type: 'error', text: error.message });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAvatarUpload = async (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n\n    // Validar tipo de archivo\n    if (!file.type.match('image.*')) {\n      setMessage({ type: 'error', text: 'Por favor, sube un archivo de imagen v√°lido (JPEG, PNG, etc.)' });\n      return;\n    }\n\n    // Validar tama√±o de archivo (m√°x 5MB)\n    if (file.size > 5 * 1024 * 1024) {\n      setMessage({ type: 'error', text: 'La imagen es demasiado grande. El tama√±o m√°ximo permitido es de 5MB.' });\n      return;\n    }\n\n    setLoading(true);\n    setMessage({ type: '', text: '' });\n\n    try {\n      console.log('Iniciando subida de archivo...');\n      \n      // 1. Crear un nombre de archivo √∫nico\n      const fileExt = file.name.split('.').pop();\n      const fileName = `avatar-${user.id}-${Date.now()}.${fileExt}`;\n      const filePath = fileName; // Usamos el nombre del archivo directamente en la ra√≠z del bucket\n\n      console.log('Subiendo archivo:', { fileName, filePath, size: file.size, type: file.type });\n\n      // 2. Subir el archivo directamente al bucket 'avatars' sin carpeta\n      const { data: uploadData, error: uploadError } = await supabase.storage\n        .from('avatars')\n        .upload(filePath, file, {\n          cacheControl: '3600',\n          upsert: true,\n          contentType: file.type\n        });\n\n      if (uploadError) {\n        console.error('Error al subir el archivo:', uploadError);\n        throw uploadError;\n      }\n\n      console.log('Archivo subido exitosamente:', uploadData);\n\n      // 3. Obtener la URL p√∫blica\n      const { data: { publicUrl } } = supabase.storage\n        .from('avatars')\n        .getPublicUrl(filePath);\n\n      console.log('URL p√∫blica generada:', publicUrl);\n\n      // 4. Actualizar el perfil del usuario con la nueva URL del avatar\n      console.log('Actualizando perfil del usuario...');\n      const { data: userData, error: updateError } = await supabase.auth.updateUser({\n        data: { \n          ...user.user_metadata,\n          avatar_url: publicUrl \n        }\n      });\n\n      if (updateError) {\n        console.error('Error al actualizar el perfil:', updateError);\n        throw updateError;\n      }\n\n      console.log('Perfil actualizado exitosamente:', userData);\n\n      // 5. Actualizar el estado local\n      setProfileData(prev => ({ \n        ...prev, \n        avatarUrl: publicUrl + '?t=' + Date.now() // A√±adir timestamp para evitar cach√©\n      }));\n      \n      // 6. Forzar actualizaci√≥n del usuario\n      const { data: { user: updatedUser }, error: userError } = await supabase.auth.getUser();\n      \n      if (userError) {\n        console.error('Error al obtener datos actualizados del usuario:', userError);\n        throw userError;\n      }\n      \n      console.log('Usuario actualizado:', updatedUser);\n      \n      setMessage({ \n        type: 'success', \n        text: '¬°Foto de perfil actualizada correctamente!' \n      });\n    } catch (error) {\n      console.error('Error en handleAvatarUpload:', error);\n      \n      let errorMessage = 'Error al subir la imagen. Por favor, int√©ntalo de nuevo.';\n      \n      if (error.statusCode === 403) {\n        errorMessage = 'Error de permisos. Aseg√∫rate de que el bucket tenga las pol√≠ticas de seguridad configuradas correctamente.';\n      } else if (error.message.includes('bucket')) {\n        errorMessage = 'Error de configuraci√≥n del almacenamiento. Por favor, verifica que el bucket exista y tenga los permisos adecuados.';\n      }\n      \n      setMessage({ \n        type: 'error', \n        text: errorMessage\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSignOut = async () => {\n    const confirmSignOut = window.confirm('¬øEst√°s seguro de que quieres cerrar sesi√≥n?');\n    if (confirmSignOut) {\n      await signOut();\n      onClose();\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"account-settings-overlay\">\n      <div className=\"account-settings-modal\">\n        <div className=\"modal-header\">\n          <h2>Configuraci√≥n de Cuenta</h2>\n          <button className=\"close-btn\" onClick={onClose}>√ó</button>\n        </div>\n\n        <div className=\"modal-content\">\n          <div className=\"tabs\">\n            <button \n              className={`tab ${activeTab === 'profile' ? 'active' : ''}`}\n              onClick={() => setActiveTab('profile')}\n            >\n              üë§ Perfil\n            </button>\n            <button \n              className={`tab ${activeTab === 'security' ? 'active' : ''}`}\n              onClick={() => setActiveTab('security')}\n            >\n              üîí Seguridad\n            </button>\n            <button \n              className={`tab ${activeTab === 'account' ? 'active' : ''}`}\n              onClick={() => setActiveTab('account')}\n            >\n              ‚öôÔ∏è Cuenta\n            </button>\n          </div>\n\n          {message.text && (\n            <div className={`message ${message.type}`}>\n              {message.text}\n            </div>\n          )}\n\n          {activeTab === 'profile' && (\n            <div className=\"tab-content\">\n              <form onSubmit={handleProfileUpdate}>\n                <div className=\"avatar-section\">\n                  <div className=\"avatar-preview\">\n                    {profileData.avatarUrl ? (\n                      <img src={profileData.avatarUrl} alt=\"Avatar\" />\n                    ) : (\n                      <div className=\"avatar-placeholder\">\n                        {profileData.fullName?.charAt(0) || user?.email?.charAt(0) || '?'}\n                      </div>\n                    )}\n                  </div>\n                  <button \n                    type=\"button\" \n                    className=\"btn-secondary\"\n                    onClick={() => fileInputRef.current?.click()}\n                    disabled={loading}\n                  >\n                    Cambiar Foto\n                  </button>\n                  <input\n                    ref={fileInputRef}\n                    type=\"file\"\n                    accept=\"image/*\"\n                    onChange={handleAvatarUpload}\n                    style={{ display: 'none' }}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label>Nombre Completo</label>\n                  <input\n                    type=\"text\"\n                    value={profileData.fullName}\n                    onChange={(e) => setProfileData(prev => ({ ...prev, fullName: e.target.value }))}\n                    placeholder=\"Tu nombre completo\"\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label>Email</label>\n                  <input\n                    type=\"email\"\n                    value={profileData.email}\n                    disabled\n                    className=\"disabled\"\n                  />\n                  <small>El email no se puede cambiar por razones de seguridad</small>\n                </div>\n\n                <button type=\"submit\" className=\"btn-primary\" disabled={loading}>\n                  {loading ? 'Guardando...' : 'Guardar Cambios'}\n                </button>\n              </form>\n            </div>\n          )}\n\n          {activeTab === 'security' && (\n            <div className=\"tab-content\">\n              <form onSubmit={handlePasswordUpdate}>\n                <div className=\"form-group\">\n                  <label>Nueva Contrase√±a</label>\n                  <input\n                    type=\"password\"\n                    value={passwordData.newPassword}\n                    onChange={(e) => setPasswordData(prev => ({ ...prev, newPassword: e.target.value }))}\n                    placeholder=\"Nueva contrase√±a (m√≠n. 6 caracteres)\"\n                    minLength={6}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label>Confirmar Nueva Contrase√±a</label>\n                  <input\n                    type=\"password\"\n                    value={passwordData.confirmPassword}\n                    onChange={(e) => setPasswordData(prev => ({ ...prev, confirmPassword: e.target.value }))}\n                    placeholder=\"Confirma tu nueva contrase√±a\"\n                    minLength={6}\n                  />\n                </div>\n\n                <button type=\"submit\" className=\"btn-primary\" disabled={loading}>\n                  {loading ? 'Actualizando...' : 'Cambiar Contrase√±a'}\n                </button>\n              </form>\n            </div>\n          )}\n\n          {activeTab === 'account' && (\n            <div className=\"tab-content\">\n              <div className=\"account-info\">\n                <h3>Informaci√≥n de la Cuenta</h3>\n                <p><strong>Email:</strong> {user?.email}</p>\n                <p><strong>ID de Usuario:</strong> {user?.id}</p>\n                <p><strong>Fecha de Registro:</strong> {new Date(user?.created_at).toLocaleDateString()}</p>\n              </div>\n\n              <div className=\"danger-zone\">\n                <h3>Zona de Peligro</h3>\n                <button \n                  className=\"btn-danger\"\n                  onClick={handleSignOut}\n                >\n                  Cerrar Sesi√≥n\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AccountSettings;\n","import React, { useState } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useSubscription } from '../contexts/SubscriptionContext';\nimport AccountSettings from './AccountSettings';\nimport './AppHeader.css';\n\nconst AppHeader = ({ showLogo = true, title = null }) => {\n  const { user } = useAuth();\n  const { subscription, isPremium } = useSubscription();\n  const [showAccountSettings, setShowAccountSettings] = useState(false);\n\n  \n  if (!user) return null;\n\n  const getUserDisplayName = () => {\n    return user?.user_metadata?.full_name || user?.email?.split('@')[0] || 'Usuario';\n  };\n\n  const getUserAvatar = () => {\n    if (user?.user_metadata?.avatar_url) {\n      return user.user_metadata.avatar_url;\n    }\n    return null;\n  };\n\n  return (\n    <>\n      <header className=\"app-header\">\n        <div className=\"header-content\">\n          \n          <div className=\"header-left\">\n            {showLogo && (\n              <div className=\"logo\">\n                <h1>Cozy Hours</h1>\n              </div>\n            )}\n            {title && (\n              <div className=\"page-title\">\n                <h2>{title}</h2>\n              </div>\n            )}\n          </div>\n\n          \n          <div className=\"header-right\">\n         \n            <div className={`subscription-badge ${isPremium() ? 'premium' : 'free'}`}>\n              {isPremium() ? (\n                <>\n                  <span className=\"badge-icon\">‚ú®</span>\n                  <span className=\"badge-text\">Premium</span>\n                </>\n              ) : (\n                <>\n                  <span className=\"badge-icon\">üÜì</span>\n                  <span className=\"badge-text\">Gratuito</span>\n                </>\n              )}\n            </div>\n\n           \n            <button \n              className=\"user-profile-btn\"\n              onClick={() => setShowAccountSettings(true)}\n              title=\"Configuraci√≥n de cuenta\"\n            >\n              {getUserAvatar() ? (\n                <img \n                  src={getUserAvatar()} \n                  alt=\"Avatar\" \n                  className=\"user-avatar\"\n                />\n              ) : (\n                <div className=\"user-avatar-placeholder\">\n                  {getUserDisplayName().charAt(0).toUpperCase()}\n                </div>\n              )}\n              <span className=\"user-name\">{getUserDisplayName()}</span>\n              <span className=\"dropdown-arrow\">‚öôÔ∏è</span>\n            </button>\n          </div>\n        </div>\n      </header>\n\n      \n      <AccountSettings \n        isOpen={showAccountSettings}\n        onClose={() => setShowAccountSettings(false)}\n      />\n    </>\n  );\n};\n\nexport default AppHeader;\n","import React, { useState, useEffect } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useSubscription } from '../contexts/SubscriptionContext';\nimport { getUserDesktops, createDesktop, updateDesktop, deleteDesktop } from '../lib/supabase';\nimport './DesktopManager.css';\n\nconst emotionalStates = [\n  { id: 'happy', name: 'Feliz', emoji: 'üòä', color: '#FFD700' },\n  { id: 'focused', name: 'Concentrado', emoji: 'üéØ', color: '#4A90E2' },\n  { id: 'relaxed', name: 'Relajado', emoji: 'üòå', color: '#7ED321' },\n  { id: 'energetic', name: 'Energetico', emoji: '‚ö°', color: '#FF6B35' },\n  { id: 'creative', name: 'Creativo', emoji: 'üé®', color: '#9013FE' },\n  { id: 'calm', name: 'Calmado', emoji: 'üßò', color: '#50E3C2' }\n];\n\nconst DesktopManager = ({ onDesktopSelect, currentDesktop, onDesktopUpdate }) => {\n  const [desktops, setDesktops] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showCreateForm, setShowCreateForm] = useState(false);\n  const [editingDesktop, setEditingDesktop] = useState(null);\n  const [formData, setFormData] = useState({\n    name: '',\n    emotional_state: 'happy',\n    theme_color: '#FFD700'\n  });\n  const [error, setError] = useState('');\n  const { user } = useAuth();\n  const { canCreateMore, getLimit, isPremium, upgradeToPremium } = useSubscription();\n\n  useEffect(() => {\n    loadDesktops();\n  }, [user]);\n\n  const loadDesktops = async () => {\n    if (!user) return;\n    \n    try {\n      setLoading(true);\n      const { data, error } = await getUserDesktops(user.id);\n      if (error) throw error;\n      setDesktops(data || []);\n    } catch (err) {\n      setError('Error al cargar escritorios: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCreateDesktop = async (e) => {\n    e.preventDefault();\n    if (!formData.name.trim()) {\n      setError('El nombre del escritorio es obligatorio');\n      return;\n    }\n\n    // Consultar l√≠mites de suscripci√≥n\n    if (!canCreateMore('desktops', desktops.length)) {\n      setError(`El plan gratuito est√° limitado a ${getLimit('desktops')} escritorios. ¬°Actualiza a Premium para obtener escritorios ilimitados!`);\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const selectedState = emotionalStates.find(s => s.id === formData.emotional_state);\n      \n      const desktopData = {\n        user_id: user.id,\n        name: formData.name.trim(),\n        emotional_state: formData.emotional_state,\n        theme_color: selectedState.color,\n        music_type: getMusicTypeForEmotion(formData.emotional_state),\n        is_active: false\n      };\n\n      const { data, error } = await createDesktop(desktopData);\n      if (error) throw error;\n\n      await loadDesktops();\n      setShowCreateForm(false);\n      setFormData({ name: '', emotional_state: 'happy', theme_color: '#FFD700' });\n      setError('');\n    } catch (err) {\n      setError('Error al crear el escritorio: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleEditDesktop = async (e) => {\n    e.preventDefault();\n    if (!formData.name.trim() || !editingDesktop) return;\n\n    try {\n      setLoading(true);\n      const selectedState = emotionalStates.find(s => s.id === formData.emotional_state);\n      \n      const updates = {\n        name: formData.name.trim(),\n        emotional_state: formData.emotional_state,\n        theme_color: selectedState.color,\n        music_type: getMusicTypeForEmotion(formData.emotional_state)\n      };\n\n      const { error } = await updateDesktop(editingDesktop.id, updates);\n      if (error) throw error;\n\n      await loadDesktops();\n      \n      // Notificar al componente principal que actualice el escritorio actual si se edito\n      if (onDesktopUpdate) {\n        await onDesktopUpdate();\n      }\n      \n      setEditingDesktop(null);\n      setFormData({ name: '', emotional_state: 'happy', theme_color: '#FFD700' });\n      setError('');\n    } catch (err) {\n      setError('Error al actualizar el escritorio: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDeleteDesktop = async (desktop) => {\n    if (!window.confirm(`Estas seguro de eliminar \"${desktop.name}\"?`)) return;\n\n    try {\n      setLoading(true);\n      const { error } = await deleteDesktop(desktop.id);\n      if (error) throw error;\n\n      await loadDesktops();\n      \n      // Si el escritorio eliminado estaba actual, seleccione otro\n      if (currentDesktop && currentDesktop.id === desktop.id) {\n        const remaining = desktops.filter(d => d.id !== desktop.id);\n        if (remaining.length > 0) {\n          onDesktopSelect(remaining[0]);\n        }\n      }\n    } catch (err) {\n      setError('Error al eliminar el escritorio: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const startEdit = (desktop) => {\n    setEditingDesktop(desktop);\n    setFormData({\n      name: desktop.name,\n      emotional_state: desktop.emotional_state,\n      theme_color: desktop.theme_color\n    });\n    setShowCreateForm(false);\n  };\n\n  const cancelEdit = () => {\n    setEditingDesktop(null);\n    setFormData({ name: '', emotional_state: 'happy', theme_color: '#FFD700' });\n  };\n\n  const getMusicTypeForEmotion = (emotion) => {\n    const musicMap = {\n      focused: 'ambient',\n      energetic: 'electronic',\n      calm: 'nature',\n      happy: 'jazz',\n      creative: 'jazz',\n      relaxed: 'lofi'\n    };\n    return musicMap[emotion] || 'lofi';\n  };\n\n  const getEmotionalStateData = (stateId) => {\n    return emotionalStates.find(s => s.id === stateId) || emotionalStates[0];\n  };\n\n  if (loading && desktops.length === 0) {\n    return (\n      <div className=\"desktop-manager\">\n        <div className=\"loading-spinner\">Cargando escritorio...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"desktop-manager\">\n      <div className=\"desktop-manager-header\">\n        <h2>Cambiar de escritorio</h2>\n        <div className=\"header-actions\">\n          <div className=\"workspace-count\">\n            <span className=\"count-text\">\n              {desktops.length}/{isPremium() ? '‚àû' : getLimit('desktops')} Escritorios\n            </span>\n            {!isPremium() && (\n              <span className=\"plan-badge\">Plan gratuito</span>\n            )}\n          </div>\n          <button \n            className=\"btn-create\"\n            onClick={() => setShowCreateForm(true)}\n            disabled={!canCreateMore('desktops', desktops.length)}\n          >\n            + Crear nuevo escritorio\n          </button>\n        </div>\n        \n        {!isPremium() && !canCreateMore('desktops', desktops.length) && (\n          <div className=\"limit-warning\">\n            <span>Alcanzaste el limite del plan gratuito</span>\n            <button className=\"upgrade-btn-small\" onClick={upgradeToPremium}>\n              Actualizar a premium\n            </button>\n          </div>\n        )}\n      </div>\n\n      {error && (\n        <div className=\"error-message\">\n          {error}\n          <button onClick={() => setError('')} className=\"error-close\">√ó</button>\n        </div>\n      )}\n\n      {/* Crear/Editar formulario */}\n      {(showCreateForm || editingDesktop) && (\n        <div className=\"desktop-form-overlay\">\n          <div className=\"desktop-form\">\n            <h3>{editingDesktop ? 'Editar espacio de trabajo' : 'Crear nuevo espacio de trabajo'}</h3>\n            \n            <form onSubmit={editingDesktop ? handleEditDesktop : handleCreateDesktop}>\n              <div className=\"form-group\">\n                <label>Nombre de escritorio</label>\n                <input\n                  type=\"text\"\n                  value={formData.name}\n                  onChange={(e) => setFormData({...formData, name: e.target.value})}\n                  placeholder=\"Ej: Escritorio para relajarme\"\n                  required\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>Estado emocional</label>\n                <div className=\"emotion-grid\">\n                  {emotionalStates.map(state => (\n                    <div\n                      key={state.id}\n                      className={`emotion-option ${formData.emotional_state === state.id ? 'selected' : ''}`}\n                      onClick={() => setFormData({\n                        ...formData, \n                        emotional_state: state.id,\n                        theme_color: state.color\n                      })}\n                    >\n                      <span className=\"emotion-emoji\">{state.emoji}</span>\n                      <span className=\"emotion-name\">{state.name}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              <div className=\"form-actions\">\n                <button type=\"submit\" className=\"btn-primary\" disabled={loading}>\n                  {loading ? 'Saving...' : (editingDesktop ? 'Actualizar' : 'Crear')}\n                </button>\n                <button \n                  type=\"button\" \n                  className=\"btn-secondary\"\n                  onClick={() => {\n                    setShowCreateForm(false);\n                    cancelEdit();\n                  }}\n                >\n                  Cancelar\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n\n      {/* Contenedor de lista de escritorios con scroll */}\n      <div className=\"desktop-list-container\">\n        <div className=\"desktop-list\">\n          {desktops.length === 0 ? (\n            <div className=\"empty-state\">\n              <p>No hay escritorios a√∫n! Crea uno</p>\n            </div>\n          ) : (\n            desktops.map(desktop => {\n              const stateData = getEmotionalStateData(desktop.emotional_state);\n              const isActive = currentDesktop && currentDesktop.id === desktop.id;\n              \n              return (\n                <div \n                  key={desktop.id} \n                  className={`desktop-card ${isActive ? 'activo' : ''}`}\n                  style={{ borderColor: stateData.color }}\n                >\n                  <div className=\"desktop-info\" onClick={() => onDesktopSelect(desktop)}>\n                    <div className=\"desktop-header\">\n                      <span className=\"desktop-emoji\">{stateData.emoji}</span>\n                      <h3 className=\"desktop-name\">{desktop.name}</h3>\n                      {isActive && <span className=\"active-badge\">Activar</span>}\n                    </div>\n                    <p className=\"desktop-emotion\">Modo {stateData.name}</p>\n                    <p className=\"desktop-date\">\n                      Creado {new Date(desktop.created_at).toLocaleDateString()}\n                    </p>\n                  </div>\n                  \n                  <div className=\"desktop-actions\">\n                    <button \n                      className=\"btn-edit\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        startEdit(desktop);\n                      }}\n                      title=\"Editar escritorio\"\n                    >\n                      ‚úèÔ∏è\n                    </button>\n                    <button \n                      className=\"btn-delete\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        handleDeleteDesktop(desktop);\n                      }}\n                      title=\"Eliminar escritorio\"\n                      disabled={desktops.length === 1}\n                    >\n                      üóëÔ∏è\n                    </button>\n                  </div>\n                </div>\n              );\n            })\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DesktopManager;\n"],"names":["AccountSettings","isOpen","onClose","user","signOut","useAuth","activeTab","setActiveTab","useState","loading","setLoading","message","setMessage","type","text","fileInputRef","useRef","profileData","setProfileData","fullName","user_metadata","full_name","email","avatarUrl","avatar_url","passwordData","setPasswordData","currentPassword","newPassword","confirmPassword","handleProfileUpdate","e","preventDefault","error","supabase","auth","updateUser","data","handlePasswordUpdate","length","password","handleAvatarUpload","file","target","files","match","size","fileExt","name","split","pop","filePath","id","Date","now","uploadData","uploadError","storage","from","upload","cacheControl","upsert","contentType","publicUrl","getPublicUrl","userData","updateError","prev","updatedUser","userError","getUser","errorMessage","statusCode","includes","handleSignOut","window","confirm","jsxs","jsx","charAt","current","click","display","value","created_at","toLocaleDateString","AppHeader","showLogo","title","subscription","isPremium","useSubscription","showAccountSettings","setShowAccountSettings","getUserDisplayName","getUserAvatar","Fragment","toUpperCase","emotionalStates","emoji","color","DesktopManager","onDesktopSelect","currentDesktop","onDesktopUpdate","desktops","setDesktops","showCreateForm","setShowCreateForm","editingDesktop","setEditingDesktop","formData","setFormData","emotional_state","theme_color","setError","canCreateMore","getLimit","upgradeToPremium","useEffect","loadDesktops","getUserDesktops","err","handleCreateDesktop","trim","selectedState","find","s","desktopData","user_id","music_type","getMusicTypeForEmotion","is_active","createDesktop","handleEditDesktop","updates","updateDesktop","handleDeleteDesktop","desktop","deleteDesktop","remaining","filter","d","startEdit","cancelEdit","emotion","focused","energetic","calm","happy","creative","relaxed","getEmotionalStateData","stateId","map","state","stateData","isActive","borderColor","stopPropagation"],"mappings":"sJAKA,MAAMA,EAAkBA,CAAC,CAAEC,OAAAA,EAAQC,QAAAA,CAAQ,IAAM,aAC/C,KAAM,CAAEC,KAAAA,EAAMC,QAAAA,CAAAA,EAAYC,EAAAA,EACpB,CAACC,EAAWC,CAAY,EAAIC,EAAAA,SAAS,SAAS,EAC9C,CAACC,EAASC,CAAU,EAAIF,EAAAA,SAAS,EAAK,EACtC,CAACG,EAASC,CAAU,EAAIJ,WAAS,CAAEK,KAAM,GAAIC,KAAM,EAAA,CAAI,EACvDC,EAAeC,EAAAA,OAAO,IAAI,EAG1B,CAACC,EAAaC,CAAc,EAAIV,WAAS,CAC7CW,WAAUhB,EAAAA,GAAAA,YAAAA,EAAMiB,gBAANjB,YAAAA,EAAqBkB,YAAa,GAC5CC,OAAOnB,GAAAA,YAAAA,EAAMmB,QAAS,GACtBC,YAAWpB,EAAAA,GAAAA,YAAAA,EAAMiB,gBAANjB,YAAAA,EAAqBqB,aAAc,EAAA,CAC/C,EAGK,CAACC,EAAcC,CAAe,EAAIlB,WAAS,CAC/CmB,gBAAiB,GACjBC,YAAa,GACbC,gBAAiB,EAAA,CAClB,EAEKC,EAAsB,MAAOC,GAAM,CACvCA,EAAEC,eAAAA,EACFtB,EAAW,EAAI,EACfE,EAAW,CAAEC,KAAM,GAAIC,KAAM,EAAA,CAAI,EAEjC,GAAI,CACF,KAAM,CAAEmB,MAAAA,CAAAA,EAAU,MAAMC,EAASC,KAAKC,WAAW,CAC/CC,KAAM,CACJhB,UAAWJ,EAAYE,SACvBK,WAAYP,EAAYM,SAAAA,CAC1B,CACD,EAED,GAAIU,EAAO,MAAMA,EAEjBrB,EAAW,CAAEC,KAAM,UAAWC,KAAM,mCAAA,CAAqC,CAC3E,OAASmB,EAAO,CACdrB,EAAW,CAAEC,KAAM,QAASC,KAAMmB,EAAMtB,OAAAA,CAAS,CACnD,QAAA,CACED,EAAW,EAAK,CAClB,CACF,EAEM4B,EAAuB,MAAOP,GAAM,CAKxC,GAJAA,EAAEC,eAAAA,EACFtB,EAAW,EAAI,EACfE,EAAW,CAAEC,KAAM,GAAIC,KAAM,EAAA,CAAI,EAE7BW,EAAaG,cAAgBH,EAAaI,gBAAiB,CAC7DjB,EAAW,CAAEC,KAAM,QAASC,KAAM,8BAAA,CAAgC,EAClEJ,EAAW,EAAK,EAChB,MACF,CAEA,GAAIe,EAAaG,YAAYW,OAAS,EAAG,CACvC3B,EAAW,CAAEC,KAAM,QAASC,KAAM,gDAAA,CAAkD,EACpFJ,EAAW,EAAK,EAChB,MACF,CAEA,GAAI,CACF,KAAM,CAAEuB,MAAAA,CAAAA,EAAU,MAAMC,EAASC,KAAKC,WAAW,CAC/CI,SAAUf,EAAaG,WAAAA,CACxB,EAED,GAAIK,EAAO,MAAMA,EAEjBrB,EAAW,CAAEC,KAAM,UAAWC,KAAM,uCAAA,CAAyC,EAC7EY,EAAgB,CAAEC,gBAAiB,GAAIC,YAAa,GAAIC,gBAAiB,EAAA,CAAI,CAC/E,OAASI,EAAO,CACdrB,EAAW,CAAEC,KAAM,QAASC,KAAMmB,EAAMtB,OAAAA,CAAS,CACnD,QAAA,CACED,EAAW,EAAK,CAClB,CACF,EAEM+B,EAAqB,MAAOV,GAAM,CACtC,MAAMW,EAAOX,EAAEY,OAAOC,MAAM,CAAC,EAC7B,GAAKF,EAGL,IAAI,CAACA,EAAK7B,KAAKgC,MAAM,SAAS,EAAG,CAC/BjC,EAAW,CAAEC,KAAM,QAASC,KAAM,+DAAA,CAAiE,EACnG,MACF,CAGA,GAAI4B,EAAKI,KAAO,EAAI,KAAO,KAAM,CAC/BlC,EAAW,CAAEC,KAAM,QAASC,KAAM,sEAAA,CAAwE,EAC1G,MACF,CAEAJ,EAAW,EAAI,EACfE,EAAW,CAAEC,KAAM,GAAIC,KAAM,EAAA,CAAI,EAEjC,GAAI,CAIF,MAAMiC,EAAUL,EAAKM,KAAKC,MAAM,GAAG,EAAEC,IAAAA,EAE/BC,EADW,UAAUhD,EAAKiD,EAAE,IAAIC,KAAKC,IAAAA,CAAK,IAAIP,CAAO,GAMrD,CAAEV,KAAMkB,EAAYtB,MAAOuB,CAAAA,EAAgB,MAAMtB,EAASuB,QAC7DC,KAAK,SAAS,EACdC,OAAOR,EAAUT,EAAM,CACtBkB,aAAc,OACdC,OAAQ,GACRC,YAAapB,EAAK7B,IAAAA,CACnB,EAEH,GAAI2C,EAEF,MAAMA,EAMR,KAAM,CAAEnB,KAAM,CAAE0B,UAAAA,CAAAA,CAAU,EAAM7B,EAASuB,QACtCC,KAAK,SAAS,EACdM,aAAab,CAAQ,EAMlB,CAAEd,KAAM4B,EAAUhC,MAAOiC,CAAAA,EAAgB,MAAMhC,EAASC,KAAKC,WAAW,CAC5EC,KAAM,CACJ,GAAGlC,EAAKiB,cACRI,WAAYuC,CAAAA,CACd,CACD,EAED,GAAIG,EAEF,MAAMA,EAMRhD,EAAeiD,IAAS,CACtB,GAAGA,EACH5C,UAAWwC,EAAY,MAAQV,KAAKC,IAAAA,CAAI,EACxC,EAGF,KAAM,CAAEjB,KAAM,CAAElC,KAAMiE,CAAAA,EAAenC,MAAOoC,CAAAA,EAAc,MAAMnC,EAASC,KAAKmC,QAAAA,EAE9E,GAAID,EAEF,MAAMA,EAKRzD,EAAW,CACTC,KAAM,UACNC,KAAM,4CAAA,CACP,CACH,OAASmB,EAAO,CAGd,IAAIsC,EAAe,2DAEftC,EAAMuC,aAAe,IACvBD,EAAe,6GACNtC,EAAMtB,QAAQ8D,SAAS,QAAQ,IACxCF,EAAe,uHAGjB3D,EAAW,CACTC,KAAM,QACNC,KAAMyD,CAAAA,CACP,CACH,QAAA,CACE7D,EAAW,EAAK,CAClB,EACF,EAEMgE,EAAgB,SAAY,CACTC,OAAOC,QAAQ,6CAA6C,IAEjF,MAAMxE,EAAAA,EACNF,EAAAA,EAEJ,EAEA,OAAKD,IAGF,MAAA,CAAI,UAAU,2BACb,SAAA4E,EAAC,MAAA,CAAI,UAAU,yBACb,SAAA,CAAAA,EAAC,MAAA,CAAI,UAAU,eACb,SAAA,CAAAC,EAAC,MAAG,SAAA,yBAAA,CAAuB,IAC1B,SAAA,CAAO,UAAU,YAAY,QAAS5E,EAAS,SAAA,GAAA,CAAC,CAAA,EACnD,EAEA2E,EAAC,MAAA,CAAI,UAAU,gBACb,SAAA,CAAAA,EAAC,MAAA,CAAI,UAAU,OACb,SAAA,CAAAC,EAAC,SAAA,CACC,UAAW,OAAOxE,IAAc,UAAY,SAAW,EAAE,GACzD,QAAS,IAAMC,EAAa,SAAS,EAAE,SAAA,YAGzC,EACAuE,EAAC,SAAA,CACC,UAAW,OAAOxE,IAAc,WAAa,SAAW,EAAE,GAC1D,QAAS,IAAMC,EAAa,UAAU,EAAE,SAAA,eAG1C,EACAuE,EAAC,SAAA,CACC,UAAW,OAAOxE,IAAc,UAAY,SAAW,EAAE,GACzD,QAAS,IAAMC,EAAa,SAAS,EAAE,SAAA,WAAA,CAGzC,CAAA,EACF,EAECI,EAAQG,MACPgE,EAAC,MAAA,CAAI,UAAW,WAAWnE,EAAQE,IAAI,GACpCF,SAAAA,EAAQG,IAAAA,CACX,EAGDR,IAAc,WACbwE,EAAC,MAAA,CAAI,UAAU,cACb,SAAAD,EAAC,OAAA,CAAK,SAAU/C,EACd,SAAA,CAAA+C,EAAC,MAAA,CAAI,UAAU,iBACb,SAAA,CAAAC,EAAC,MAAA,CAAI,UAAU,iBACZ7D,SAAAA,EAAYM,UACXuD,EAAC,MAAA,CAAI,IAAK7D,EAAYM,UAAW,IAAI,SAAQ,EAE7CuD,EAAC,MAAA,CAAI,UAAU,qBACZ7D,WAAAA,EAAAA,EAAYE,WAAZF,YAAAA,EAAsB8D,OAAO,OAAM5E,EAAAA,GAAAA,YAAAA,EAAMmB,QAANnB,YAAAA,EAAa4E,OAAO,KAAM,GAAA,CAChE,EAEJ,EACAD,EAAC,SAAA,CACC,KAAK,SACL,UAAU,gBACV,QAAS,IAAA,OAAM/D,OAAAA,EAAAA,EAAaiE,UAAbjE,YAAAA,EAAsBkE,SACrC,SAAUxE,EAAQ,SAAA,eAGpB,EACAqE,EAAC,QAAA,CACC,IAAK/D,EACL,KAAK,OACL,OAAO,UACP,SAAU0B,EACV,MAAO,CAAEyC,QAAS,MAAA,CAAO,CAAE,CAAA,EAE/B,EAEAL,EAAC,MAAA,CAAI,UAAU,aACb,SAAA,CAAAC,EAAC,SAAM,SAAA,iBAAA,CAAe,EACtBA,EAAC,QAAA,CACC,KAAK,OACL,MAAO7D,EAAYE,SACnB,SAAWY,GAAMb,EAAeiD,IAAS,CAAE,GAAGA,EAAMhD,SAAUY,EAAEY,OAAOwC,KAAAA,EAAQ,EAC/E,YAAY,oBAAA,CAAoB,CAAA,EAEpC,EAEAN,EAAC,MAAA,CAAI,UAAU,aACb,SAAA,CAAAC,EAAC,SAAM,SAAA,OAAA,CAAK,EACZA,EAAC,QAAA,CACC,KAAK,QACL,MAAO7D,EAAYK,MACnB,SAAQ,GACR,UAAU,UAAA,CAAU,EAEtBwD,EAAC,SAAM,SAAA,uDAAA,CAAqD,CAAA,EAC9D,EAEAA,EAAC,SAAA,CAAO,KAAK,SAAS,UAAU,cAAc,SAAUrE,EACrDA,SAAAA,EAAU,eAAiB,iBAAA,CAC9B,CAAA,CAAA,CACF,CAAA,CACF,EAGDH,IAAc,YACbwE,EAAC,MAAA,CAAI,UAAU,cACb,SAAAD,EAAC,OAAA,CAAK,SAAUvC,EACd,SAAA,CAAAuC,EAAC,MAAA,CAAI,UAAU,aACb,SAAA,CAAAC,EAAC,SAAM,SAAA,kBAAA,CAAgB,EACvBA,EAAC,QAAA,CACC,KAAK,WACL,MAAOrD,EAAaG,YACpB,SAAWG,GAAML,EAAgByC,IAAS,CAAE,GAAGA,EAAMvC,YAAaG,EAAEY,OAAOwC,KAAAA,EAAQ,EACnF,YAAY,uCACZ,UAAW,CAAA,CAAE,CAAA,EAEjB,EAEAN,EAAC,MAAA,CAAI,UAAU,aACb,SAAA,CAAAC,EAAC,SAAM,SAAA,4BAAA,CAA0B,EACjCA,EAAC,QAAA,CACC,KAAK,WACL,MAAOrD,EAAaI,gBACpB,SAAWE,GAAML,EAAgByC,IAAS,CAAE,GAAGA,EAAMtC,gBAAiBE,EAAEY,OAAOwC,KAAAA,EAAQ,EACvF,YAAY,+BACZ,UAAW,CAAA,CAAE,CAAA,EAEjB,EAEAL,EAAC,SAAA,CAAO,KAAK,SAAS,UAAU,cAAc,SAAUrE,EACrDA,SAAAA,EAAU,kBAAoB,oBAAA,CACjC,CAAA,CAAA,CACF,CAAA,CACF,EAGDH,IAAc,WACbuE,EAAC,MAAA,CAAI,UAAU,cACb,SAAA,CAAAA,EAAC,MAAA,CAAI,UAAU,eACb,SAAA,CAAAC,EAAC,MAAG,SAAA,0BAAA,CAAwB,IAC3B,IAAA,CAAE,SAAA,CAAAA,EAAC,UAAO,SAAA,QAAA,CAAM,EAAS,IAAE3E,GAAAA,YAAAA,EAAMmB,KAAAA,EAAM,IACvC,IAAA,CAAE,SAAA,CAAAwD,EAAC,UAAO,SAAA,gBAAA,CAAc,EAAS,IAAE3E,GAAAA,YAAAA,EAAMiD,EAAAA,EAAG,IAC5C,IAAA,CAAE,SAAA,CAAA0B,EAAC,UAAO,SAAA,oBAAA,CAAkB,EAAS,IAAE,IAAIzB,KAAKlD,GAAAA,YAAAA,EAAMiF,UAAU,EAAEC,mBAAAA,CAAmB,CAAA,CAAE,CAAA,EAC1F,EAEAR,EAAC,MAAA,CAAI,UAAU,cACb,SAAA,CAAAC,EAAC,MAAG,SAAA,iBAAA,CAAe,IAClB,SAAA,CACC,UAAU,aACV,QAASJ,EAAc,SAAA,eAAA,CAGzB,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,CACF,CAAA,CACF,EAtJkB,IAwJtB,ECxVMY,EAAYA,CAAC,CAAEC,SAAAA,EAAW,GAAMC,MAAAA,EAAQ,IAAK,IAAM,CACvD,KAAM,CAAErF,KAAAA,CAAAA,EAASE,EAAAA,EACX,CAAEoF,aAAAA,EAAcC,UAAAA,CAAAA,EAAcC,EAAAA,EAC9B,CAACC,EAAqBC,CAAsB,EAAIrF,EAAAA,SAAS,EAAK,EAGpE,GAAI,CAACL,EAAM,OAAO,KAElB,MAAM2F,EAAqBA,IAAM,SAC/B,QAAO3F,EAAAA,GAAAA,YAAAA,EAAMiB,gBAANjB,YAAAA,EAAqBkB,cAAalB,EAAAA,GAAAA,YAAAA,EAAMmB,QAANnB,YAAAA,EAAa8C,MAAM,KAAK,KAAM,SACzE,EAEM8C,EAAgBA,IAAM,OAC1B,OAAI5F,EAAAA,GAAAA,YAAAA,EAAMiB,gBAANjB,MAAAA,EAAqBqB,WAChBrB,EAAKiB,cAAcI,WAErB,IACT,EAEA,OACEqD,EAAAmB,EAAA,CACE,SAAA,CAAAlB,EAAC,UAAO,UAAU,aAChB,SAAAD,EAAC,MAAA,CAAI,UAAU,iBAEb,SAAA,CAAAA,EAAC,MAAA,CAAI,UAAU,cACZU,SAAAA,CAAAA,KACE,MAAA,CAAI,UAAU,OACb,SAAAT,EAAC,KAAA,CAAG,sBAAU,CAAA,CAChB,EAEDU,KACE,MAAA,CAAI,UAAU,aACb,SAAAV,EAAC,KAAA,CAAIU,WAAM,CAAA,CACb,CAAA,EAEJ,EAGAX,EAAC,MAAA,CAAI,UAAU,eAEb,SAAA,CAAAC,EAAC,MAAA,CAAI,UAAW,sBAAsBY,EAAAA,EAAc,UAAY,MAAM,GACnEA,SAAAA,EAAAA,EACCb,EAAAmB,EAAA,CACE,SAAA,CAAAlB,EAAC,OAAA,CAAK,UAAU,aAAa,SAAA,IAAC,EAC9BA,EAAC,OAAA,CAAK,UAAU,aAAa,SAAA,SAAA,CAAO,CAAA,CAAA,CACtC,EAEAD,EAAAmB,EAAA,CACE,SAAA,CAAAlB,EAAC,OAAA,CAAK,UAAU,aAAa,SAAA,KAAE,EAC/BA,EAAC,OAAA,CAAK,UAAU,aAAa,SAAA,UAAA,CAAQ,CAAA,CAAA,CACvC,CAAA,CAEJ,EAGAD,EAAC,SAAA,CACC,UAAU,mBACV,QAAS,IAAMgB,EAAuB,EAAI,EAC1C,MAAM,0BAELE,SAAAA,CAAAA,MACE,MAAA,CACC,IAAKA,IACL,IAAI,SACJ,UAAU,aAAA,CAAa,EAGzBjB,EAAC,MAAA,CAAI,UAAU,0BACZgB,SAAAA,EAAAA,EAAqBf,OAAO,CAAC,EAAEkB,YAAAA,CAAY,CAC9C,EAEFnB,EAAC,OAAA,CAAK,UAAU,YAAagB,aAAqB,EAClDhB,EAAC,OAAA,CAAK,UAAU,iBAAiB,SAAA,IAAA,CAAE,CAAA,CAAA,CACrC,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,EAGAA,EAAC9E,GACC,OAAQ4F,EACR,QAAS,IAAMC,EAAuB,EAAK,CAAA,CAAE,CAAA,EAEjD,CAEJ,ECrFMK,EAAkB,CACtB,CAAE9C,GAAI,QAASJ,KAAM,QAASmD,MAAO,KAAMC,MAAO,SAAU,EAC5D,CAAEhD,GAAI,UAAWJ,KAAM,cAAemD,MAAO,KAAMC,MAAO,SAAU,EACpE,CAAEhD,GAAI,UAAWJ,KAAM,WAAYmD,MAAO,KAAMC,MAAO,SAAU,EACjE,CAAEhD,GAAI,YAAaJ,KAAM,aAAcmD,MAAO,IAAKC,MAAO,SAAU,EACpE,CAAEhD,GAAI,WAAYJ,KAAM,WAAYmD,MAAO,KAAMC,MAAO,SAAU,EAClE,CAAEhD,GAAI,OAAQJ,KAAM,UAAWmD,MAAO,KAAMC,MAAO,SAAU,CAAC,EAG1DC,EAAiBA,CAAC,CAAEC,gBAAAA,EAAiBC,eAAAA,EAAgBC,gBAAAA,CAAgB,IAAM,CAC/E,KAAM,CAACC,EAAUC,CAAW,EAAIlG,EAAAA,SAAS,CAAA,CAAE,EACrC,CAACC,EAASC,CAAU,EAAIF,EAAAA,SAAS,EAAI,EACrC,CAACmG,EAAgBC,CAAiB,EAAIpG,EAAAA,SAAS,EAAK,EACpD,CAACqG,EAAgBC,CAAiB,EAAItG,EAAAA,SAAS,IAAI,EACnD,CAACuG,EAAUC,CAAW,EAAIxG,WAAS,CACvCwC,KAAM,GACNiE,gBAAiB,QACjBC,YAAa,SAAA,CACd,EACK,CAACjF,EAAOkF,CAAQ,EAAI3G,EAAAA,SAAS,EAAE,EAC/B,CAAEL,KAAAA,CAAAA,EAASE,EAAAA,EACX,CAAE+G,cAAAA,EAAeC,SAAAA,EAAU3B,UAAAA,EAAW4B,iBAAAA,CAAAA,EAAqB3B,EAAAA,EAEjE4B,EAAAA,UAAU,IAAM,CACdC,EAAAA,CACF,EAAG,CAACrH,CAAI,CAAC,EAET,MAAMqH,EAAe,SAAY,CAC/B,GAAKrH,EAEL,GAAI,CACFO,EAAW,EAAI,EACf,KAAM,CAAE2B,KAAAA,EAAMJ,MAAAA,CAAAA,EAAU,MAAMwF,EAAgBtH,EAAKiD,EAAE,EACrD,GAAInB,EAAO,MAAMA,EACjByE,EAAYrE,GAAQ,EAAE,CACxB,OAASqF,EAAK,CACZP,EAAS,gCAAkCO,EAAI/G,OAAO,CACxD,QAAA,CACED,EAAW,EAAK,CAClB,CACF,EAEMiH,EAAsB,MAAO5F,GAAM,CAEvC,GADAA,EAAEC,eAAAA,EACE,CAAC+E,EAAS/D,KAAK4E,OAAQ,CACzBT,EAAS,yCAAyC,EAClD,MACF,CAGA,GAAI,CAACC,EAAc,WAAYX,EAASlE,MAAM,EAAG,CAC/C4E,EAAS,oCAAoCE,EAAS,UAAU,CAAC,yEAAyE,EAC1I,MACF,CAEA,GAAI,CACF3G,EAAW,EAAI,EACf,MAAMmH,EAAgB3B,EAAgB4B,QAAUC,EAAE3E,KAAO2D,EAASE,eAAe,EAE3Ee,EAAc,CAClBC,QAAS9H,EAAKiD,GACdJ,KAAM+D,EAAS/D,KAAK4E,KAAAA,EACpBX,gBAAiBF,EAASE,gBAC1BC,YAAaW,EAAczB,MAC3B8B,WAAYC,EAAuBpB,EAASE,eAAe,EAC3DmB,UAAW,EAAA,EAGP,CAAE/F,KAAAA,EAAMJ,MAAAA,CAAAA,EAAU,MAAMoG,EAAcL,CAAW,EACvD,GAAI/F,EAAO,MAAMA,EAEjB,MAAMuF,EAAAA,EACNZ,EAAkB,EAAK,EACvBI,EAAY,CAAEhE,KAAM,GAAIiE,gBAAiB,QAASC,YAAa,SAAA,CAAW,EAC1EC,EAAS,EAAE,CACb,OAASO,EAAK,CACZP,EAAS,iCAAmCO,EAAI/G,OAAO,CACzD,QAAA,CACED,EAAW,EAAK,CAClB,CACF,EAEM4H,EAAoB,MAAOvG,GAAM,CAErC,GADAA,EAAEC,eAAAA,EACE,GAAC+E,EAAS/D,KAAK4E,KAAAA,GAAU,CAACf,GAE9B,GAAI,CACFnG,EAAW,EAAI,EACf,MAAMmH,EAAgB3B,EAAgB4B,QAAUC,EAAE3E,KAAO2D,EAASE,eAAe,EAE3EsB,EAAU,CACdvF,KAAM+D,EAAS/D,KAAK4E,KAAAA,EACpBX,gBAAiBF,EAASE,gBAC1BC,YAAaW,EAAczB,MAC3B8B,WAAYC,EAAuBpB,EAASE,eAAe,CAAA,EAGvD,CAAEhF,MAAAA,CAAAA,EAAU,MAAMuG,EAAc3B,EAAezD,GAAImF,CAAO,EAChE,GAAItG,EAAO,MAAMA,EAEjB,MAAMuF,EAAAA,EAGFhB,GACF,MAAMA,EAAAA,EAGRM,EAAkB,IAAI,EACtBE,EAAY,CAAEhE,KAAM,GAAIiE,gBAAiB,QAASC,YAAa,SAAA,CAAW,EAC1EC,EAAS,EAAE,CACb,OAASO,EAAK,CACZP,EAAS,sCAAwCO,EAAI/G,OAAO,CAC9D,QAAA,CACED,EAAW,EAAK,CAClB,CACF,EAEM+H,EAAsB,MAAOC,GAAY,CAC7C,GAAK/D,OAAOC,QAAQ,6BAA6B8D,EAAQ1F,IAAI,IAAI,EAEjE,GAAI,CACFtC,EAAW,EAAI,EACf,KAAM,CAAEuB,MAAAA,CAAAA,EAAU,MAAM0G,EAAcD,EAAQtF,EAAE,EAChD,GAAInB,EAAO,MAAMA,EAKjB,GAHA,MAAMuF,EAAAA,EAGFjB,GAAkBA,EAAenD,KAAOsF,EAAQtF,GAAI,CACtD,MAAMwF,EAAYnC,EAASoC,UAAYC,EAAE1F,KAAOsF,EAAQtF,EAAE,EACtDwF,EAAUrG,OAAS,GACrB+D,EAAgBsC,EAAU,CAAC,CAAC,CAEhC,CACF,OAASlB,EAAK,CACZP,EAAS,oCAAsCO,EAAI/G,OAAO,CAC5D,QAAA,CACED,EAAW,EAAK,CAClB,CACF,EAEMqI,EAAaL,GAAY,CAC7B5B,EAAkB4B,CAAO,EACzB1B,EAAY,CACVhE,KAAM0F,EAAQ1F,KACdiE,gBAAiByB,EAAQzB,gBACzBC,YAAawB,EAAQxB,WAAAA,CACtB,EACDN,EAAkB,EAAK,CACzB,EAEMoC,EAAaA,IAAM,CACvBlC,EAAkB,IAAI,EACtBE,EAAY,CAAEhE,KAAM,GAAIiE,gBAAiB,QAASC,YAAa,SAAA,CAAW,CAC5E,EAEMiB,EAA0Bc,IACb,CACfC,QAAS,UACTC,UAAW,aACXC,KAAM,SACNC,MAAO,OACPC,SAAU,OACVC,QAAS,MAAA,GAEKN,CAAO,GAAK,OAGxBO,EAAyBC,GACtBvD,EAAgB4B,KAAKC,GAAKA,EAAE3E,KAAOqG,CAAO,GAAKvD,EAAgB,CAAC,EAGzE,OAAIzF,GAAWgG,EAASlE,SAAW,EAE/BuC,EAAC,OAAI,UAAU,kBACb,WAAC,MAAA,CAAI,UAAU,kBAAkB,SAAA,wBAAA,CAAsB,CAAA,CACzD,EAKFD,EAAC,MAAA,CAAI,UAAU,kBACb,SAAA,CAAAA,EAAC,MAAA,CAAI,UAAU,yBACb,SAAA,CAAAC,EAAC,MAAG,SAAA,uBAAA,CAAqB,EACzBD,EAAC,MAAA,CAAI,UAAU,iBACb,SAAA,CAAAA,EAAC,MAAA,CAAI,UAAU,kBACb,SAAA,CAAAA,EAAC,OAAA,CAAK,UAAU,aACb4B,SAAAA,CAAAA,EAASlE,OAAO,IAAEmD,IAAc,IAAM2B,EAAS,UAAU,EAAE,cAAA,EAC9D,EACC,CAAC3B,EAAAA,KACC,OAAA,CAAK,UAAU,aAAa,SAAA,eAAA,CAAa,CAAA,EAE9C,IACC,SAAA,CACC,UAAU,aACV,QAAS,IAAMkB,EAAkB,EAAI,EACrC,SAAU,CAACQ,EAAc,WAAYX,EAASlE,MAAM,EAAE,SAAA,0BAAA,CAGxD,CAAA,EACF,EAEC,CAACmD,EAAAA,GAAe,CAAC0B,EAAc,WAAYX,EAASlE,MAAM,GACzDsC,EAAC,MAAA,CAAI,UAAU,gBACb,SAAA,CAAAC,EAAC,QAAK,SAAA,wCAAA,CAAsC,IAC3C,SAAA,CAAO,UAAU,oBAAoB,QAASwC,EAAiB,SAAA,sBAAA,CAEhE,CAAA,CAAA,CACF,CAAA,EAEJ,EAECrF,GACC4C,EAAC,MAAA,CAAI,UAAU,gBACZ5C,SAAAA,CAAAA,EACD6C,EAAC,UAAO,QAAS,IAAMqC,EAAS,EAAE,EAAG,UAAU,cAAc,SAAA,GAAA,CAAC,CAAA,EAChE,GAIAR,GAAkBE,IAClB/B,EAAC,MAAA,CAAI,UAAU,uBACb,SAAAD,EAAC,MAAA,CAAI,UAAU,eACb,SAAA,CAAAC,EAAC,KAAA,CAAI+B,SAAAA,EAAiB,4BAA8B,iCAAiC,EAErFhC,EAAC,OAAA,CAAK,SAAUgC,EAAiByB,EAAoBX,EACnD,SAAA,CAAA9C,EAAC,MAAA,CAAI,UAAU,aACb,SAAA,CAAAC,EAAC,SAAM,SAAA,sBAAA,CAAoB,EAC3BA,EAAC,SACC,KAAK,OACL,MAAOiC,EAAS/D,KAChB,SAAWjB,GAAMiF,EAAY,CAAC,GAAGD,EAAU/D,KAAMjB,EAAEY,OAAOwC,KAAAA,CAAM,EAChE,YAAY,gCACZ,SAAQ,EAAA,CAAA,CAAA,EAEZ,EAEAN,EAAC,MAAA,CAAI,UAAU,aACb,SAAA,CAAAC,EAAC,SAAM,SAAA,kBAAA,CAAgB,EACvBA,EAAC,OAAI,UAAU,eACZoB,WAAgBwD,IAAIC,KAClB,MAAA,CAEC,UAAW,kBAAkB5C,EAASE,kBAAoB0C,EAAMvG,GAAK,WAAa,EAAE,GACpF,QAAS,IAAM4D,EAAY,CACzB,GAAGD,EACHE,gBAAiB0C,EAAMvG,GACvB8D,YAAayC,EAAMvD,KAAAA,CACpB,EAED,SAAA,CAAAtB,EAAC,OAAA,CAAK,UAAU,gBAAiB6E,SAAAA,EAAMxD,MAAM,EAC7CrB,EAAC,OAAA,CAAK,UAAU,eAAgB6E,WAAM3G,IAAAA,CAAK,CAAA,GATtC2G,EAAMvG,EAUb,CACD,CAAA,CACH,CAAA,EACF,EAEAyB,EAAC,MAAA,CAAI,UAAU,eACb,SAAA,CAAAC,EAAC,SAAA,CAAO,KAAK,SAAS,UAAU,cAAc,SAAUrE,EACrDA,SAAAA,EAAU,YAAeoG,EAAiB,aAAe,QAC5D,IACC,SAAA,CACC,KAAK,SACL,UAAU,gBACV,QAAS,IAAM,CACbD,EAAkB,EAAK,EACvBoC,EAAAA,CACF,EAAE,SAAA,UAAA,CAGJ,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,EAIFlE,EAAC,OAAI,UAAU,yBACb,WAAC,MAAA,CAAI,UAAU,eACZ2B,SAAAA,EAASlE,SAAW,IAClB,MAAA,CAAI,UAAU,cACb,SAAAuC,EAAC,IAAA,CAAE,4CAAgC,CAAA,CACrC,EAEA2B,EAASiD,IAAIhB,GAAW,CACtB,MAAMkB,EAAYJ,EAAsBd,EAAQzB,eAAe,EACzD4C,EAAWtD,GAAkBA,EAAenD,KAAOsF,EAAQtF,GAEjE,OACEyB,EAAC,OAEC,UAAW,gBAAgBgF,EAAW,SAAW,EAAE,GACnD,MAAO,CAAEC,YAAaF,EAAUxD,KAAAA,EAEhC,SAAA,CAAAvB,EAAC,OAAI,UAAU,eAAe,QAAS,IAAMyB,EAAgBoC,CAAO,EAClE,SAAA,CAAA7D,EAAC,MAAA,CAAI,UAAU,iBACb,SAAA,CAAAC,EAAC,OAAA,CAAK,UAAU,gBAAiB8E,SAAAA,EAAUzD,MAAM,EACjDrB,EAAC,KAAA,CAAG,UAAU,eAAgB4D,WAAQ1F,KAAK,EAC1C6G,GAAY/E,EAAC,OAAA,CAAK,UAAU,eAAe,SAAA,SAAA,CAAO,CAAA,EACrD,EACAD,EAAC,IAAA,CAAE,UAAU,kBAAkB,SAAA,CAAA,QAAM+E,EAAU5G,IAAAA,EAAK,EACpD6B,EAAC,IAAA,CAAE,UAAU,eAAc,SAAA,CAAA,UACjB,IAAIxB,KAAKqF,EAAQtD,UAAU,EAAEC,mBAAAA,CAAmB,CAAA,CAC1D,CAAA,EACF,EAEAR,EAAC,MAAA,CAAI,UAAU,kBACb,SAAA,CAAAC,EAAC,SAAA,CACC,UAAU,WACV,QAAU/C,GAAM,CACdA,EAAEgI,gBAAAA,EACFhB,EAAUL,CAAO,CACnB,EACA,MAAM,oBAAmB,SAAA,IAAA,CAG3B,EACA5D,EAAC,SAAA,CACC,UAAU,aACV,QAAU/C,GAAM,CACdA,EAAEgI,gBAAAA,EACFtB,EAAoBC,CAAO,CAC7B,EACA,MAAM,sBACN,SAAUjC,EAASlE,SAAW,EAAE,SAAA,KAAA,CAGlC,CAAA,CAAA,CACF,CAAA,CAAA,EAtCKmG,EAAQtF,EAuCf,CAEJ,CAAC,EAEL,CAAA,CACF,CAAA,EACF,CAEJ"}