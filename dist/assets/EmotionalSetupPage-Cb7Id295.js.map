{"version":3,"file":"EmotionalSetupPage-Cb7Id295.js","sources":["../../src/pages/EmotionalSetupPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useSubscription } from '../contexts/SubscriptionContext';\nimport { createDesktop, createUserProfile, getUserDesktops } from '../lib/supabase';\nimport AppHeader from '../components/AppHeader';\nimport DesktopManager from '../components/DesktopManager';\nimport './EmotionalSetupPage.css';\n\nconst emotionalStates = [\n  { id: 'happy', name: 'Feliz', emoji: 'üòä', color: '#FFD700' },\n  { id: 'focused', name: 'Enfocado', emoji: 'üéØ', color: '#4A90E2' },\n  { id: 'relaxed', name: 'Relajado', emoji: 'üòå', color: '#7ED321' },\n  { id: 'energetic', name: 'Energetico', emoji: '‚ö°', color: '#FF6B35' },\n  { id: 'creative', name: 'Creativo', emoji: 'üé®', color: '#9013FE' },\n  { id: 'calm', name: 'Calmado', emoji: 'üßò', color: '#50E3C2' }\n];\n\nconst EmotionalSetupPage = () => {\n  const [selectedState, setSelectedState] = useState(null);\n  const [desktopName, setDesktopName] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [showDesktopManager, setShowDesktopManager] = useState(false);\n  const [existingDesktops, setExistingDesktops] = useState([]);\n  const [hasDesktops, setHasDesktops] = useState(false);\n  const { user } = useAuth();\n  const { isFirstLogin, resetFirstLoginFlag } = useSubscription();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    loadExistingDesktops();\n  }, [user]);\n\n  const loadExistingDesktops = async () => {\n    if (!user) return;\n    \n    try {\n      const { data, error } = await getUserDesktops(user.id);\n      if (error) throw error;\n      \n      setExistingDesktops(data || []);\n      setHasDesktops((data || []).length > 0);\n    } catch (error) {\n      console.error('Error loading existing desktops:', error);\n    }\n  };\n\n  const handleDesktopSelect = (desktop) => {\n    navigate('/dashboard');\n  };\n\n  const handleStateSelect = (state) => {\n    setSelectedState(state);\n    if (!desktopName) {\n      setDesktopName(`escritorio ${state.name}`);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!selectedState || !desktopName.trim()) {\n      setError('Please select an emotional state and enter a desktop name');\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n\n    try {\n      // Crear perfil de usuario con uan estructura correcta\n      const profileData = {\n        id: user.id,\n        email: user.email,\n        full_name: user.user_metadata?.full_name || user.email?.split('@')[0] || 'User',\n        avatar_url: user.user_metadata?.avatar_url || null\n      };\n\n      const { error: profileError } = await createUserProfile(user.id, profileData);\n      if (profileError) {\n        console.log('Profile creation error:', profileError);\n        // No lanzar error si el perfil ya existe\n        if (!profileError.message.includes('duplicate key') && !profileError.message.includes('already exists')) {\n          throw new Error('Failed to create user profile: ' + profileError.message);\n        }\n      }\n\n      // Crear escritorio inicial\n      const desktopData = {\n        user_id: user.id,\n        name: desktopName.trim(),\n        emotional_state: selectedState.id,\n        theme_color: selectedState.color,\n        music_type: selectedState.id === 'focused' ? 'ambient' : \n                   selectedState.id === 'energetic' ? 'electronic' : \n                   selectedState.id === 'calm' ? 'nature' :\n                   selectedState.id === 'happy' ? 'jazz' :\n                   selectedState.id === 'creative' ? 'jazz' : 'lofi',\n        is_active: true\n      };\n\n      const { error: desktopError } = await createDesktop(desktopData);\n      if (desktopError) {\n        throw new Error('Failed to create desktop: ' + desktopError.message);\n      }\n\n      // Navegar a la Dashboard\n      navigate('/dashboard');\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"emotional-setup-page\">\n      {/* Encabezado de la aplicaci√≥n */}\n      <AppHeader title=\"Configuraci√≥n de Espacio de Trabajo\" />\n      \n      <div className=\"setup-container\">\n        <div className=\"setup-header\">\n          <h1 className=\"setup-title\">\n            ¬°Bienvenido a Cozy Hours!\n          </h1>\n          {isFirstLogin && (\n            <div className=\"first-login-welcome\">\n              <div className=\"welcome-badge\">\n                üéâ ¬°Bienvenido! Est√°s comenzando con el <strong>Plan Gratuito</strong>\n              </div>\n              <p className=\"welcome-details\">\n                Puedes crear hasta 3 espacios de trabajo, 10 tareas y 5 notas. \n                ¬°Actualiza a Premium cuando quieras para acceso ilimitado!\n              </p>\n            </div>\n          )}\n          <p className=\"setup-subtitle\">\n            {hasDesktops \n              ? 'Crea un nuevo espacio de trabajo o administra los existentes'\n              : 'Elige tu estado emocional actual para crear tu espacio de trabajo personalizado'\n            }\n          </p>\n          \n          {hasDesktops && (\n            <div className=\"workspace-options\">\n              <button \n                type=\"button\"\n                className=\"btn-manage-workspaces\"\n                onClick={() => setShowDesktopManager(true)}\n              >\n                üñ•Ô∏è Administrar espacios de trabajo existentes ({existingDesktops.length})\n              </button>\n            </div>\n          )}\n        </div>\n\n        <form className=\"setup-form\" onSubmit={handleSubmit}>\n          {error && (\n            <div className=\"error-message\">\n              {error}\n            </div>\n          )}\n\n          <div className=\"emotional-states\">\n            {emotionalStates.map((state) => (\n              <div\n                key={state.id}\n                className={`state-option ${selectedState?.id === state.id ? 'selected' : ''}`}\n                onClick={() => handleStateSelect(state)}\n              >\n                <div className=\"state-emoji\">{state.emoji}</div>\n                <p className=\"state-name\">{state.name}</p>\n              </div>\n            ))}\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"desktopName\" className=\"form-label\">\n              Nombra tu espacio de trabajo\n            </label>\n            <input\n              type=\"text\"\n              id=\"desktopName\"\n              value={desktopName}\n              onChange={(e) => setDesktopName(e.target.value)}\n              className=\"form-input\"\n              placeholder=\"Ej: Felizuwu\"\n              disabled={loading}\n            />\n          </div>\n\n          {selectedState && desktopName && (\n            <div className=\"desktop-preview\">\n              <h3 className=\"preview-title\">Vista previa</h3>\n              <div className=\"preview-content\">\n                <span className=\"preview-emoji\">{selectedState.emoji}</span>\n                <span className=\"preview-text\">{desktopName}</span>\n              </div>\n            </div>\n          )}\n\n          <div className=\"setup-actions\" style={{ display: 'flex', justifyContent: 'center' }}>\n            <button \n              type=\"submit\" \n              className=\"btn-primary\"\n              disabled={loading || !selectedState || !desktopName.trim()}\n              onClick={(e) => {\n                console.log('Bot√≥n hecho clic!', { loading, selectedState, desktopName });\n                // Dejar al formulario manejar el env√≠o (submit)\n              }}\n            >\n              {loading ? (\n                <>\n                  <span className=\"loading-spinner\"></span>\n                  Creando tu espacio...\n                </>\n              ) : (\n                'Crear mi escritorio'\n              )}\n            </button>\n          </div>\n        </form>\n      </div>\n\n      {/* Administrador de espacios de trabajo */}\n      {showDesktopManager && (\n        <div className=\"desktop-manager-overlay\">\n          <div className=\"desktop-manager-container\">\n            <button \n              className=\"close-desktop-manager\"\n              onClick={() => setShowDesktopManager(false)}\n            >\n              √ó\n            </button>\n            <DesktopManager \n              onDesktopSelect={handleDesktopSelect}\n              currentDesktop={null}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default EmotionalSetupPage;\n"],"names":["emotionalStates","id","name","emoji","color","EmotionalSetupPage","selectedState","setSelectedState","useState","desktopName","setDesktopName","loading","setLoading","error","setError","showDesktopManager","setShowDesktopManager","existingDesktops","setExistingDesktops","hasDesktops","setHasDesktops","user","useAuth","isFirstLogin","resetFirstLoginFlag","useSubscription","navigate","useNavigate","useEffect","loadExistingDesktops","data","getUserDesktops","length","handleDesktopSelect","desktop","handleStateSelect","state","handleSubmit","e","preventDefault","trim","profileData","email","full_name","user_metadata","split","avatar_url","profileError","createUserProfile","message","includes","Error","desktopData","user_id","emotional_state","theme_color","music_type","is_active","desktopError","createDesktop","jsxs","jsx","AppHeader","map","target","value","display","justifyContent","Fragment","DesktopManager"],"mappings":"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"}