{"version":3,"file":"ResetPasswordPage-Dapy5pcy.js","sources":["../../src/pages/ResetPasswordPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSearchParams, useNavigate, useLocation, Link } from 'react-router-dom';\nimport { supabase } from '../lib/supabase';\nimport './AuthPages.css';\n\nconst ResetPasswordPage = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState({ type: '', text: '' });\n  const [formData, setFormData] = useState({\n    password: '',\n    confirmPassword: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [email, setEmail] = useState('');\n\n  useEffect(() => {\n    // Verificar si hay un token de restablecimiento en la URL\n    const params = new URLSearchParams(location.search);\n    const type = params.get('type');\n    const accessToken = params.get('access_token');\n    const refreshToken = params.get('refresh_token');\n    \n    // Si no hay tokens en los parámetros, verificar el fragmento\n    if (!accessToken && location.hash) {\n      const fragment = new URLSearchParams(location.hash.substring(1));\n      const fragmentToken = fragment.get('access_token');\n      const fragmentRefresh = fragment.get('refresh_token');\n      \n      if (fragmentToken) {\n        // Si encontramos tokens en el fragmento, redirigir con parámetros de consulta\n        const newUrl = `${window.location.pathname}?type=recovery&access_token=${fragmentToken}` +\n                      (fragmentRefresh ? `&refresh_token=${fragmentRefresh}` : '');\n        window.location.replace(newUrl);\n        return;\n      }\n    }\n    \n    // Si tenemos tokens, configurar la sesión\n    if (type === 'recovery' && accessToken) {\n      // Limpiar la URL para que no se vean los tokens\n      window.history.replaceState({}, document.title, window.location.pathname);\n      \n      // Configurar la sesión con los tokens\n      supabase.auth.setSession({\n        access_token: accessToken,\n        refresh_token: refreshToken || ''\n      }).then(({ error }) => {\n        if (error) {\n          console.error('Error al configurar la sesión:', error);\n          setMessage({\n            type: 'error',\n            text: 'El enlace de restablecimiento es inválido o ha expirado. Por favor, solicita uno nuevo.'\n          });\n        } else {\n          // Obtener el email del usuario actual\n          const user = supabase.auth.user();\n          if (user) {\n            setEmail(user.email);\n          }\n        }\n      });\n    } else {\n      setMessage({\n        type: 'error',\n        text: 'No se encontró un enlace de restablecimiento válido. Por favor, solicita uno nuevo.'\n      });\n    }\n  }, [location]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    \n    // Limpiar errores cuando el usuario escribe\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n    \n    if (!formData.password) {\n      newErrors.password = 'La contraseña es requerida';\n    } else if (formData.password.length < 6) {\n      newErrors.password = 'La contraseña debe tener al menos 6 caracteres';\n    }\n    \n    if (formData.password !== formData.confirmPassword) {\n      newErrors.confirmPassword = 'Las contraseñas no coinciden';\n    }\n    \n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!validateForm()) return;\n    \n    setLoading(true);\n    setMessage({ type: '', text: '' });\n    \n    try {\n      // Actualizar la contraseña del usuario actual\n      const { error } = await supabase.auth.updateUser({\n        password: formData.password\n      });\n      \n      if (error) throw error;\n      \n      // Cerrar sesión después de cambiar la contraseña\n      await supabase.auth.signOut();\n      \n      setMessage({\n        type: 'success',\n        text: '¡Tu contraseña ha sido actualizada correctamente! Redirigiendo al inicio de sesión...'\n      });\n      \n      // Redirigir al login después de 3 segundos\n      setTimeout(() => {\n        navigate('/login', { state: { passwordUpdated: true } });\n      }, 3000);\n      \n    } catch (error) {\n      console.error('Error al restablecer la contraseña:', error);\n      setMessage({\n        type: 'error',\n        text: error.message || 'Ocurrió un error al restablecer la contraseña. Por favor, inténtalo de nuevo.'\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"auth-page\">\n      <div className=\"auth-container\">\n        <div className=\"auth-header\">\n          <Link to=\"/login\" className=\"back-link\">\n            ← Volver al inicio de sesión\n          </Link>\n          <h1 className=\"auth-title\">Restablecer Contraseña</h1>\n          <p className=\"auth-subtitle\">\n            {message.type === 'success' \n              ? message.text\n              : email \n                ? `Establece una nueva contraseña para ${email}`\n                : 'Ingresa tu nueva contraseña para continuar.'}\n          </p>\n        </div>\n\n        {message.type !== 'success' && (\n          <form className=\"auth-form\" onSubmit={handleSubmit}>\n            {message.text && (\n              <div className={`message ${message.type === 'error' ? 'error-message' : 'success-message'}`}>\n                {message.text}\n              </div>\n            )}\n\n            <div className=\"form-group\">\n              <label htmlFor=\"password\" className=\"form-label\">Nueva Contraseña</label>\n              <input\n                type=\"password\"\n                id=\"password\"\n                name=\"password\"\n                value={formData.password}\n                onChange={handleChange}\n                className={`form-input ${errors.password ? 'error' : ''}`}\n                placeholder=\"Ingresa tu nueva contraseña\"\n                disabled={loading}\n              />\n              {errors.password && <span className=\"field-error\">{errors.password}</span>}\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"confirmPassword\" className=\"form-label\">Confirmar Contraseña</label>\n              <input\n                type=\"password\"\n                id=\"confirmPassword\"\n                name=\"confirmPassword\"\n                value={formData.confirmPassword}\n                onChange={handleChange}\n                className={`form-input ${errors.confirmPassword ? 'error' : ''}`}\n                placeholder=\"Confirma tu nueva contraseña\"\n                disabled={loading}\n              />\n              {errors.confirmPassword && (\n                <span className=\"field-error\">{errors.confirmPassword}</span>\n              )}\n            </div>\n\n            <button \n              type=\"submit\" \n              className=\"btn btn-primary btn-full\"\n              disabled={loading}\n            >\n              {loading ? (\n                <>\n                  <span className=\"loading-spinner\"></span>\n                  Actualizando...\n                </>\n              ) : (\n                'Actualizar Contraseña'\n              )}\n            </button>\n          </form>\n        )}\n\n        <div className=\"auth-footer\">\n          <p>\n            ¿Recordaste tu contraseña?{' '}\n            <a href=\"/login\" className=\"auth-link\">\n              Iniciar sesión\n            </a>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ResetPasswordPage;\n"],"names":["ResetPasswordPage","location","useLocation","navigate","useNavigate","loading","setLoading","useState","message","setMessage","type","text","formData","setFormData","password","confirmPassword","errors","setErrors","email","setEmail","useEffect","params","URLSearchParams","search","get","accessToken","refreshToken","hash","fragment","substring","fragmentToken","fragmentRefresh","newUrl","window","pathname","replace","history","replaceState","document","title","supabase","auth","setSession","access_token","refresh_token","then","error","user","handleChange","e","name","value","target","prev","validateForm","newErrors","length","Object","keys","handleSubmit","preventDefault","updateUser","signOut","setTimeout","state","passwordUpdated","jsxs","jsx","Link","Fragment"],"mappings":"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"}